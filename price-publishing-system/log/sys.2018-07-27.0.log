2018-06-23 08:47:02,112 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 08:47:02,116 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 08:47:02,118 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 08:47:05,873 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 4.169 seconds (JVM running for 5.334)
2018-06-23 09:20:22,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 09:20:22,349 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 09:20:22,382 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:20:25,052 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 09:20:25,053 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 09:20:25,055 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:20:25,077 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 09:20:25,078 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 09:20:25,087 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:28:42,274 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:28:42,274 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {3}(String)
2018-06-23 09:28:42,311 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:28:42,317 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:28:42,317 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:28:42,319 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:29:18,942 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:29:18,943 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {3}(String)
2018-06-23 09:29:18,944 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:29:18,947 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:29:18,948 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:29:18,949 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:30:48,584 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:30:48,585 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:30:48,586 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:30:48,589 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:30:48,589 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:30:48,590 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:25,481 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:31:25,482 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:31:25,483 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:25,486 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:31:25,486 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:31:25,487 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:36,093 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:31:36,093 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:31:36,094 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:36,098 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:31:36,098 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:31:36,099 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:53,229 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:31:53,229 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {3}(String)
2018-06-23 09:31:53,231 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:31:53,234 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:31:53,234 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:31:53,235 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:32:06,488 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:32:06,489 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {3}(String)
2018-06-23 09:32:06,490 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:32:06,494 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:32:06,495 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:32:06,496 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:32:23,004 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:32:23,005 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {3}(String)
2018-06-23 09:32:23,006 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:32:23,009 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:32:23,009 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:32:23,010 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:32:46,984 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 09:32:46,985 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 09:32:46,986 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:32:46,989 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 09:32:46,990 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 09:32:46,991 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:33:03,332 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:33:03,332 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:33:03,333 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:33:03,337 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:33:03,337 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:33:03,338 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:33:58,993 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:33:58,993 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:33:58,994 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:33:58,998 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:33:58,998 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:33:58,999 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:43:19,784 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 09:43:19,785 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: {15dfbb149b5a419f96f15cc0feae5d39}(String)
2018-06-23 09:43:19,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:43:19,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 09:43:19,888 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: null
2018-06-23 09:43:19,889 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:48:12,860 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 09:48:12,860 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 15dfbb149b5a419f96f15cc0feae5d39(String)
2018-06-23 09:48:12,885 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:48:40,083 ERROR (GlobalDefaultExceptionHandler.java:24)- http://192.168.1.249:8080//collect/template/findList=================Required String parameter 'userId' is not present
2018-06-23 09:49:37,650 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 09:49:37,650 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 09:49:37,651 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:49:37,652 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 09:49:37,653 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 10(Integer)
2018-06-23 09:49:37,655 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 09:55:09,966 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 09:55:09,967 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 09:55:09,969 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:55:09,970 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 09:55:09,970 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 10(Integer)
2018-06-23 09:55:09,972 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 09:55:29,189 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select p.id, p.name, p.specification from product_info p where exists (select * from template_ref_product where template_id =? and p.id = product_id) 
2018-06-23 09:55:29,189 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9f8c102c1e8d41e6aca9ae6408cd141b(String)
2018-06-23 09:55:29,228 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 09:55:29,229 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( id = ? and is_del = ? ) 
2018-06-23 09:55:29,229 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9f8c102c1e8d41e6aca9ae6408cd141b(String), 0(Short)
2018-06-23 09:55:29,231 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:56:14,115 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select p.id, p.name, p.specification from product_info p where exists (select * from template_ref_product where template_id =? and p.id = product_id) 
2018-06-23 09:56:14,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 08265f05f76b4474b86cd376301e2322(String)
2018-06-23 09:56:14,116 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:56:14,117 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( id = ? and is_del = ? ) 
2018-06-23 09:56:14,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 08265f05f76b4474b86cd376301e2322(String), 0(Short)
2018-06-23 09:56:14,119 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:57:46,065 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_history WHERE (user_id = ? AND is_del = ?) 
2018-06-23 09:57:46,066 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String), 0(Short)
2018-06-23 09:57:46,092 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:57:46,092 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, price_collect_id, market_name, collection_time, is_del, user_id from collection_history WHERE ( user_id = ? and is_del = ? ) LIMIT ? 
2018-06-23 09:57:46,093 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String), 0(Short), 10(Integer)
2018-06-23 09:57:46,094 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 09:58:22,587 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_history WHERE (user_id = ? AND is_del = ?) 
2018-06-23 09:58:22,587 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String), 0(Short)
2018-06-23 09:58:22,589 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:58:22,589 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, price_collect_id, market_name, collection_time, is_del, user_id from collection_history WHERE ( user_id = ? and is_del = ? ) LIMIT ? 
2018-06-23 09:58:22,590 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String), 0(Short), 10(Integer)
2018-06-23 09:58:22,591 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 09:59:18,320 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, create_time, update_time, create_user, description, procudt_id, price, price_type, market_id, product_id from price_collection WHERE ( history_id = ? ) 
2018-06-23 09:59:18,320 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 8c26bb62763c4049aaf10c4a08640b31(String)
2018-06-23 09:59:18,341 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 09:59:18,342 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name,specification from product_info where id = ? 
2018-06-23 09:59:18,342 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5f688a2ae1a64a719d79d773aa2a1cf1(String)
2018-06-23 09:59:18,343 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:59:18,344 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name,specification from product_info where id = ? 
2018-06-23 09:59:18,344 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0d7c8cffc21f48d899463e03a6c1991b(String)
2018-06-23 09:59:18,345 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:59:18,346 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name,specification from product_info where id = ? 
2018-06-23 09:59:18,346 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 05b304c20e3241a7a4b81a30fd481e89(String)
2018-06-23 09:59:18,347 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:59:18,348 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name,specification from product_info where id = ? 
2018-06-23 09:59:18,348 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 6fc1042cca1c4695aa8dd5aae9cdf5e7(String)
2018-06-23 09:59:18,349 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 09:59:18,349 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name,specification from product_info where id = ? 
2018-06-23 09:59:18,350 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 05b304c20e3241a7a4b81a30fd481e89(String)
2018-06-23 09:59:18,351 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:26:48,546 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 10:26:48,546 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 10:26:48,547 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 10:26:49,464 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 0.941 seconds (JVM running for 5988.847)
2018-06-23 10:27:35,023 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 10:27:35,024 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: productType(String)
2018-06-23 10:27:35,026 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:27:35,031 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 10:27:35,031 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: d462ea8e648941e1ae6eae806d1c9928(String)
2018-06-23 10:27:35,033 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 10:27:58,118 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:27:58,119 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:27:58,121 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:27:58,122 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:27:58,122 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 10(Integer)
2018-06-23 10:27:58,123 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:28:29,731 ERROR (GlobalDefaultExceptionHandler.java:24)- http://192.168.1.249:8080/dict=================Required String parameter 'typeCode' is not present
2018-06-23 10:29:50,059 ERROR (GlobalDefaultExceptionHandler.java:24)- http://192.168.1.249:8080/dict=================Required String parameter 'typeCode' is not present
2018-06-23 10:30:04,675 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 10:30:04,676 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 10:30:04,677 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:30:04,680 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 10:30:04,680 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 10:30:04,682 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:30:17,168 ERROR (GlobalDefaultExceptionHandler.java:24)- http://192.168.1.249:8080/dict=================Required String parameter 'typeCode' is not present
2018-06-23 10:30:21,662 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 10:30:21,662 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: productType(String)
2018-06-23 10:30:21,663 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:30:21,667 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 10:30:21,667 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: d462ea8e648941e1ae6eae806d1c9928(String)
2018-06-23 10:30:21,669 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 10:30:26,604 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 10:30:26,604 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: regionType(String)
2018-06-23 10:30:26,606 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:30:26,609 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 10:30:26,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1a11634f811f4dbb9a7a136fd727fac2(String)
2018-06-23 10:30:26,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 10:33:35,683 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 10:33:35,683 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: regionType(String)
2018-06-23 10:33:35,684 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:33:35,688 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 10:33:35,688 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1a11634f811f4dbb9a7a136fd727fac2(String)
2018-06-23 10:33:35,689 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 10:37:59,751 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:37:59,751 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:37:59,753 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:37:59,757 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:37:59,757 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:37:59,758 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:38:52,075 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:38:52,075 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:38:52,076 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:38:52,079 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:38:52,080 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:38:52,081 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:39:44,316 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:39:44,316 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:39:44,317 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:39:44,320 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:39:44,321 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:39:44,322 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:41:38,795 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:41:38,795 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:41:38,796 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:41:38,800 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:41:38,800 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:41:38,801 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:42:12,357 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:42:12,357 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:42:12,359 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:42:12,362 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:42:12,362 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:42:12,363 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:42:13,093 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:42:13,093 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:42:13,094 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:42:13,095 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:42:13,095 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:42:13,097 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:52:53,937 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:52:53,937 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:52:53,938 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:52:55,083 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:52:55,084 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:52:55,085 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:53:01,538 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:53:01,538 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:53:01,539 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:53:46,381 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:53:46,382 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方ds(String)
2018-06-23 10:53:46,383 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:54:39,856 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:54:39,856 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:54:39,857 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:54:40,904 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:54:40,904 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:54:40,906 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:54:45,208 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:54:45,209 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:54:45,210 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:54:49,965 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:54:49,966 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:54:49,967 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:54:49,970 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:54:49,970 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:54:49,971 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:54:52,528 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:54:52,528 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:54:52,529 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:54:52,530 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:54:52,530 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:54:52,531 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:58:01,644 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 10:58:01,644 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 10:58:01,644 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 10:58:02,400 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 0.775 seconds (JVM running for 7861.758)
2018-06-23 10:58:10,051 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:58:10,052 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 10:58:10,053 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 10:58:12,711 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:58:12,711 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:58:12,713 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:12,717 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:58:12,717 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:12,718 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:13,956 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:58:13,957 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:13,958 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:13,958 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:58:13,959 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:58:13,960 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:58:20,642 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:58:20,643 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:20,644 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:20,644 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:58:20,645 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:58:20,646 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:58:24,469 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 10:58:24,470 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 10:58:24,471 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:24,474 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 10:58:24,474 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:24,475 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:25,343 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:58:25,344 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:25,345 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:25,345 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:58:25,346 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:58:25,347 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 10:58:36,658 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 10:58:36,658 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 10:58:36,659 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 10:58:36,660 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 10:58:36,660 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 10:58:36,662 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:05:41,967 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:05:41,967 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:05:41,969 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:05:41,972 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:05:41,972 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:05:41,973 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:05:44,447 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:05:44,447 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方sd(String)
2018-06-23 11:05:44,449 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 11:05:46,373 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:05:46,374 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:05:46,375 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:05:46,378 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:05:46,378 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:05:46,379 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:05:47,055 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:05:47,055 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:05:47,056 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:05:47,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:05:47,058 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:05:47,059 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:11:40,147 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:11:40,147 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:11:40,149 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:11:40,152 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:11:40,152 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:11:40,153 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:11:42,216 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:11:42,216 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:11:42,217 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:11:42,217 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:11:42,218 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:11:42,219 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:11:51,997 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:11:51,998 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:11:52,018 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:11:52,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:11:52,019 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:11:52,075 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:15:21,453 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:15:21,453 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:15:21,454 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:21,457 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:15:21,458 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:21,459 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:22,536 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:15:22,536 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:22,537 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:22,538 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:15:22,539 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:15:22,540 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:15:25,041 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:15:25,041 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:25,042 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:25,043 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:15:25,043 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:15:25,044 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:15:27,371 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:15:27,372 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:27,373 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:27,373 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:15:27,373 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:15:27,375 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:15:29,802 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:15:29,803 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:29,804 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:29,804 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:15:29,805 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:15:29,806 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:15:44,404 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:15:44,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:15:44,405 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:44,408 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:15:44,408 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:44,409 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:45,232 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:15:45,235 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:15:45,236 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:15:45,237 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:15:45,238 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:15:45,239 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:16:16,518 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:16:16,518 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:16:16,520 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:16:16,523 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:16:16,523 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:16:16,524 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:16:17,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:16:17,328 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:16:17,329 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:16:17,330 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:16:17,330 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:16:17,331 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:20:41,096 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:20:41,096 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:20:41,098 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:20:41,101 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:20:41,101 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:20:41,102 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:20:57,838 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:20:57,838 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:20:57,840 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:20:57,843 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:20:57,843 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:20:57,844 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:20:58,675 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:20:58,675 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:20:58,676 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:20:58,676 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:20:58,677 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:20:58,678 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:26:12,872 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:26:12,872 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:26:12,873 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:12,876 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:26:12,876 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:26:12,877 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:13,724 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:26:13,724 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:26:13,725 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:13,725 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:26:13,726 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:26:13,727 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:26:31,954 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:26:31,954 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:26:31,955 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:31,958 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:26:31,958 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:26:31,959 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:36,704 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:26:36,704 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:26:36,705 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:26:36,706 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:26:36,706 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:26:36,707 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:31:15,122 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:31:15,122 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方t(String)
2018-06-23 11:31:15,123 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 11:31:41,510 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:31:41,510 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:31:41,511 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:31:41,514 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:31:41,514 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:31:41,516 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:31:48,289 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:31:48,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:31:48,290 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:31:48,291 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:31:48,291 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:31:48,292 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:32:51,029 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:32:51,029 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:32:51,031 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:32:51,034 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:32:51,034 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:32:51,035 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:32:54,993 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:32:54,993 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:32:54,994 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:32:54,994 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:32:54,995 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:32:54,996 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:32:57,609 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:32:57,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:32:57,610 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:32:57,611 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:32:57,611 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:32:57,612 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:32:59,905 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:32:59,905 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:32:59,906 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:32:59,907 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:32:59,907 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:32:59,909 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:33:02,053 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:33:02,054 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:33:02,055 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:33:02,055 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:33:02,055 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:33:02,057 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:34:20,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:34:20,752 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:34:20,753 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:20,756 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:34:20,757 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:20,758 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:21,735 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:34:21,735 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:21,736 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:21,737 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:34:21,737 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:34:21,738 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:34:33,534 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:34:33,534 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:34:33,536 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:33,540 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:34:33,540 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:33,542 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:34,704 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:34:34,704 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:34,705 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:34,706 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:34:34,706 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:34:34,707 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:34:37,078 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:34:37,079 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:37,080 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:37,080 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:34:37,081 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:34:37,082 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:34:54,510 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:34:54,510 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:34:54,512 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:54,514 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:34:54,515 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:54,516 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:55,298 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:34:55,298 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:55,299 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:55,299 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:34:55,300 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:34:55,301 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:34:58,010 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:34:58,011 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:34:58,012 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:58,015 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:34:58,015 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:58,016 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:58,889 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:34:58,889 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:34:58,890 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:34:58,891 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:34:58,891 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:34:58,892 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:35:32,615 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:35:32,616 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:35:32,617 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:35:32,620 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:35:32,620 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:35:32,621 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:35:44,826 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:35:44,827 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:35:44,828 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:35:44,831 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:35:44,831 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:35:44,832 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:35:48,707 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:35:48,708 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:35:48,709 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:35:48,709 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:35:48,709 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:35:48,710 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:36:24,324 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:36:24,324 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:36:24,325 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:36:24,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:36:24,328 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:36:24,329 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:36:59,627 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:36:59,627 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:36:59,628 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:36:59,631 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:36:59,631 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:36:59,632 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:37:01,200 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:37:01,201 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:37:01,202 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:37:01,202 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:37:01,202 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:37:01,204 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:06,642 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:38:06,642 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:38:06,643 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:06,646 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:38:06,646 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:06,647 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:07,781 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:07,781 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:07,782 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:07,783 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:07,783 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:07,785 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:09,910 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:38:09,910 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:38:09,911 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:09,914 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:38:09,914 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:09,915 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:11,174 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:38:11,175 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:38:11,176 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:11,179 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:38:11,179 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:11,180 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:13,256 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:13,256 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:13,257 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:13,258 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:13,258 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:13,259 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:16,436 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:16,436 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:16,437 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:16,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:16,438 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:16,439 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:18,621 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:18,621 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:18,622 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:18,623 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:18,623 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:18,624 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:24,581 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:24,581 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:24,582 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:24,582 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:24,582 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:24,583 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:38:26,777 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:38:26,778 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:38:26,779 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:38:26,779 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:38:26,779 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:38:26,781 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:00,632 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:00,632 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:00,633 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:00,634 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:00,634 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:00,635 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:22,589 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:40:22,589 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:40:22,591 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:22,593 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:40:22,593 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:22,594 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:24,072 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:24,072 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:24,073 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:24,074 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:24,074 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:24,075 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:48,541 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:40:48,542 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:40:48,543 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:48,546 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:40:48,546 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:48,547 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:49,863 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:49,863 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:49,864 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:49,865 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:49,865 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:49,866 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:52,654 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:52,654 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:52,655 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:52,655 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:52,656 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:52,657 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:57,040 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:57,040 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:57,041 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:57,042 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:57,042 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:57,043 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:40:59,043 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:40:59,044 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:40:59,044 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:40:59,045 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:40:59,045 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:40:59,046 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:41:01,249 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:41:01,250 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:41:01,251 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:41:01,251 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:41:01,251 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:41:01,253 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:41:03,334 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:41:03,334 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:41:03,335 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:41:03,336 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:41:03,336 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:41:03,337 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:41:05,358 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:41:05,358 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:41:05,359 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:41:05,359 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:41:05,359 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:41:05,360 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:42:30,182 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:42:30,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:42:30,183 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:30,186 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:42:30,186 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:30,187 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:30,964 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:42:30,964 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:30,965 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:30,966 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:42:30,966 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:42:30,967 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:42:32,713 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:42:32,713 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:32,714 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:32,715 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:42:32,715 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:42:32,717 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:42:32,717 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:42:32,717 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:32,719 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:32,719 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:42:32,719 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:42:32,720 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:42:55,666 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:42:55,667 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:42:55,668 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:55,670 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:42:55,671 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:42:55,672 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:55,671 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:42:55,673 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:55,673 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:55,676 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:42:55,676 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:55,678 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:57,385 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:42:57,385 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:57,386 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:57,386 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:42:57,387 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:42:57,388 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:42:57,515 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:42:57,515 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:42:57,516 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:42:57,517 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:42:57,517 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:42:57,518 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:01,070 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:01,070 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:01,071 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:01,072 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:01,072 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:01,073 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:05,409 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:43:05,409 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:43:05,410 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:05,413 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:43:05,414 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:05,415 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:05,429 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 11:43:05,429 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 11:43:05,430 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:05,433 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 11:43:05,433 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:05,434 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:06,876 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:06,877 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:06,878 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:06,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:06,879 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:06,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:07,035 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:07,035 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:07,036 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:07,037 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:07,037 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:07,038 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:09,709 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:09,709 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:09,710 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:09,711 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:09,711 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:09,712 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:09,805 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:09,806 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:09,807 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:09,807 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:09,807 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:09,809 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:11,944 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:11,944 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:11,945 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:11,946 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:11,946 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:11,947 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:14,151 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:14,152 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:14,153 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:14,153 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:14,153 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:14,155 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:18,437 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:18,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:18,438 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:18,439 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:18,439 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:18,441 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:43:18,442 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:43:18,442 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:43:18,443 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:43:18,443 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:43:18,443 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:43:18,444 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:45:45,256 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:45:45,257 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:45:45,258 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:45:45,259 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:45:45,259 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:45:45,260 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:45:47,833 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:45:47,834 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:45:47,835 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:45:47,835 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:45:47,835 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:45:47,836 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:45:49,785 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:45:49,785 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:45:49,786 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:45:49,787 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:45:49,787 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:45:49,788 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 11:45:58,124 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 11:45:58,125 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 11:45:58,125 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 11:45:59,234 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.144 seconds (JVM running for 10738.554)
2018-06-23 11:55:25,563 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 11:55:25,563 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 11:55:25,565 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 11:55:25,565 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 11:55:25,566 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 11:55:25,567 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 12:00:37,425 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 12:00:37,426 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 12:00:37,427 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:00:37,431 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 12:00:37,432 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 12:00:37,433 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:00:38,271 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 12:00:38,272 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 12:00:38,273 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:00:38,274 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 12:00:38,274 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 12:00:38,275 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 12:01:49,736 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 12:01:49,737 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: jiangzhouzhou(String)
2018-06-23 12:01:49,738 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 12:01:53,151 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 12:01:53,152 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 12:02:00,192 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into collection_template (id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, is_del, type, name) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-06-23 12:02:00,193 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: e9f320e251d04cc49cf770e145a5caa2(String), null, null, null, 2018-06-23 12:02:00.192(Timestamp), 2018-06-23 12:02:00.192(Timestamp), 1af634b62499449d86f271b8107c4ac1(String), null, 0(Short), null, 测试模版9(String)
2018-06-23 12:02:00,381 ERROR (GlobalDefaultExceptionHandler.java:24)- http://localhost:8080/collect/template/add=================
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '测试模版9' for key 'name_UNIQUE'
### The error may involve com.hywa.pricepublish.dao.mapper.CollectionTemplateMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into collection_template (id, user_id, market_id,        product_id, create_time, update_time,        create_user, update_user, is_del,        type, name)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '测试模版9' for key 'name_UNIQUE'
; ]; Duplicate entry '测试模版9' for key 'name_UNIQUE'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '测试模版9' for key 'name_UNIQUE'
2018-06-23 12:02:34,118 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select p.id, p.name, p.specification from product_info p where exists (select * from template_ref_product where template_id =? and p.id = product_id) 
2018-06-23 12:02:34,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0577a9103c6744fe84bd88c658ac145b(String)
2018-06-23 12:02:34,142 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 2
2018-06-23 12:02:34,143 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( id = ? and is_del = ? ) 
2018-06-23 12:02:34,144 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0577a9103c6744fe84bd88c658ac145b(String), 0(Short)
2018-06-23 12:02:34,145 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:05:37,725 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 12:05:37,725 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 12:05:37,726 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:05:37,729 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 12:05:37,729 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 12:05:37,730 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:05:47,049 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 12:05:47,049 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 12:05:47,050 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 12:05:47,051 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 12:05:47,051 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 12:05:47,052 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 12:49:23,573 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:23,574 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:23,574 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:28,021 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:28,021 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:28,021 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:29,288 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplicationTests on LongLi-PC with PID 9700 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:29,289 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:29,291 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:31,344 INFO (StartupInfoLogger.java:50)- Starting CollectionTemplateServiceImplTest on LongLi-PC with PID 9700 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:31,345 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:31,346 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:31,853 INFO (StartupInfoLogger.java:50)- Starting CollectionTemplateServiceImplTest on LongLi-PC with PID 9700 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:31,854 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:31,858 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:32,406 INFO (StartupInfoLogger.java:50)- Starting UserServiceTest on LongLi-PC with PID 9700 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:32,406 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:32,406 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 12:49:32,881 INFO (StartupInfoLogger.java:50)- Starting UserServiceTest on LongLi-PC with PID 9700 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 12:49:32,882 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 12:49:32,882 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:45,582 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:45,582 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:45,582 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:49,058 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:49,058 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:49,058 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:49,487 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplicationTests on LongLi-PC with PID 6380 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:49,488 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:49,490 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:51,239 INFO (StartupInfoLogger.java:50)- Starting CollectionTemplateServiceImplTest on LongLi-PC with PID 6380 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:51,240 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:51,240 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:51,801 INFO (StartupInfoLogger.java:50)- Starting CollectionTemplateServiceImplTest on LongLi-PC with PID 6380 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:51,801 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:51,802 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:52,319 INFO (StartupInfoLogger.java:50)- Starting UserServiceTest on LongLi-PC with PID 6380 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:52,319 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:52,320 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:09:52,896 INFO (StartupInfoLogger.java:50)- Starting UserServiceTest on LongLi-PC with PID 6380 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:09:52,897 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:09:52,897 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:40:27,110 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:40:27,110 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:40:27,110 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:40:31,337 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 6372 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:40:31,337 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:40:31,337 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:44:22,618 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 7548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:44:22,619 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:44:22,620 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:44:57,139 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 5608 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:44:57,140 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:44:57,142 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:46:04,289 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 8212 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 13:46:04,290 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 13:46:04,292 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 13:46:07,826 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.935 seconds (JVM running for 4.664)
2018-06-23 13:46:11,564 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 13:46:11,677 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: regionType(String)
2018-06-23 13:46:11,725 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:11,735 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 13:46:11,736 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1a11634f811f4dbb9a7a136fd727fac2(String)
2018-06-23 13:46:11,739 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 13:46:15,368 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 13:46:15,368 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: regionType(String)
2018-06-23 13:46:15,369 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:15,373 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 13:46:15,373 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1a11634f811f4dbb9a7a136fd727fac2(String)
2018-06-23 13:46:15,375 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 13:46:17,086 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 13:46:17,087 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: regionType(String)
2018-06-23 13:46:17,088 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:17,091 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 13:46:17,092 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1a11634f811f4dbb9a7a136fd727fac2(String)
2018-06-23 13:46:17,093 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-06-23 13:46:29,794 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 13:46:29,795 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 13:46:29,798 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:29,820 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 13:46:29,821 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:46:29,823 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:30,599 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 13:46:30,602 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:46:30,605 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:30,606 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 13:46:30,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 13:46:30,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 13:46:43,201 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 13:46:43,201 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:46:43,203 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:43,203 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 13:46:43,204 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 13:46:43,207 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 13:46:45,515 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 13:46:45,516 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:46:45,517 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:46:45,518 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 13:46:45,518 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 13:46:45,520 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 13:48:15,620 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 13:48:15,620 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:48:15,622 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:48:15,623 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 13:48:15,624 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 13:48:15,627 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 13:48:17,367 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 13:48:17,367 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 13:48:17,369 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 13:48:17,370 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 13:48:17,370 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 13:48:17,372 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:00:13,925 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 8212 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:00:13,926 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:00:13,926 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:00:15,122 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.222 seconds (JVM running for 851.949)
2018-06-23 14:00:22,915 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 8212 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:00:22,915 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:00:22,915 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:00:24,365 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.479 seconds (JVM running for 861.192)
2018-06-23 14:14:59,601 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 8212 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:14:59,602 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:14:59,602 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:15:00,890 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.315 seconds (JVM running for 1737.705)
2018-06-23 14:15:54,162 ERROR (GlobalDefaultExceptionHandler.java:24)- http://localhost:8080/user/hello=================Request method 'GET' not supported
2018-06-23 14:16:16,855 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 8212 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:16:16,855 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:16:16,855 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:16:17,986 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.159 seconds (JVM running for 1814.8)
2018-06-23 14:16:19,031 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:16:19,033 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:16:19,035 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:16:19,040 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:16:19,041 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:16:19,042 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:16:20,561 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:16:20,562 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:16:20,564 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:16:20,565 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:16:20,566 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:16:20,568 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:32,458 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:24:32,458 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:24:32,460 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:32,463 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:24:32,463 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:32,464 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:34,314 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:34,314 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:34,315 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:34,316 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:34,323 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:34,325 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:38,160 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:38,161 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:38,162 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:38,163 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:38,164 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:38,165 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:40,821 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:40,822 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:40,823 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:40,824 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:40,824 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:40,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:43,115 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:43,116 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:43,117 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:43,118 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:43,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:43,120 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:48,056 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:48,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:48,058 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:48,059 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:48,059 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:48,060 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:24:51,180 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:24:51,180 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:24:51,181 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:24:51,182 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:24:51,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:24:51,184 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:26:30,749 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:26:30,749 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:26:30,750 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:26:30,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:26:30,752 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:26:30,753 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:31:16,383 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:31:16,383 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方ret(String)
2018-06-23 14:31:16,384 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 14:31:19,206 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:31:19,206 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方r(String)
2018-06-23 14:31:19,207 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 14:31:21,411 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:31:21,412 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:31:21,413 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:31:21,416 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:31:21,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:31:21,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:21,119 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:32:21,120 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:32:21,121 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:21,124 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:32:21,125 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:32:21,126 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:50,399 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:32:50,400 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:32:50,401 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:50,404 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:32:50,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:32:50,405 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:51,164 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:32:51,165 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:32:51,166 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:32:51,167 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:32:51,167 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 14:32:51,168 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:34:08,858 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:34:08,859 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:34:08,860 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:34:08,863 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:34:08,863 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:34:08,864 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:35:01,105 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:35:01,105 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:35:01,107 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:35:01,110 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:35:01,110 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:35:01,111 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:36:43,114 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:36:43,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:36:43,116 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:36:43,119 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:36:43,119 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:36:43,120 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:37:05,073 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:37:05,073 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:37:05,074 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:37:05,078 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:37:05,078 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:37:05,079 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:38:10,941 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 14:38:10,942 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 14:38:10,966 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:38:10,972 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 14:38:10,972 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 14:38:10,986 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 14:42:21,810 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:42:21,811 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:42:21,812 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:42:21,815 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:42:21,815 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:42:21,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:42:23,593 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 14:42:23,593 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 14:42:23,595 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:42:23,598 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 14:42:23,598 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 14:42:23,600 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 14:50:23,340 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:50:23,342 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:50:23,343 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:50:26,750 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.691 seconds (JVM running for 5.254)
2018-06-23 14:51:17,875 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:51:17,961 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:51:17,982 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:51:17,986 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:51:17,988 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 10(Integer)
2018-06-23 14:51:17,991 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:52:11,063 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 14:52:11,064 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:52:11,077 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:52:11,078 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 14:52:11,083 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 10(Integer)
2018-06-23 14:52:11,105 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 14:52:44,410 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:52:44,410 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:52:44,410 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:52:45,472 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.089 seconds (JVM running for 143.974)
2018-06-23 14:52:57,530 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 14:52:57,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 14:52:57,545 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:52:57,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 14:52:57,552 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 14:52:57,564 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:53:07,154 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 14:53:07,155 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 14:53:07,176 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:53:07,181 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 14:53:07,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 14:53:07,195 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 14:53:42,589 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 14:53:42,589 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 14:53:42,590 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 14:53:42,593 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 14:53:42,594 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 14:53:42,595 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 14:54:49,532 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:54:49,534 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:54:56,974 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:54:56,976 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:55:01,106 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:55:01,107 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:55:12,239 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:55:12,240 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:55:13,816 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:55:13,816 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:55:14,872 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:55:14,873 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:56:37,951 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:56:37,952 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:57:28,782 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 14:57:28,783 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 14:59:45,268 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 14:59:45,268 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 14:59:45,269 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 14:59:46,312 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.111 seconds (JVM running for 564.809)
2018-06-23 15:00:39,678 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:00:39,679 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:00:39,679 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:00:41,055 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.42 seconds (JVM running for 619.551)
2018-06-23 15:00:45,773 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:00:45,774 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:00:45,775 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:00:45,780 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:00:45,781 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:00:45,783 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:00:47,632 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:00:47,632 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:00:47,634 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:00:47,637 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:00:47,637 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:00:47,638 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:00:50,829 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:00:50,829 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:00:50,830 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:00:50,834 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:00:50,834 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:00:50,837 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:00:53,598 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:00:53,599 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:00:56,292 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:00:56,293 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:00:56,294 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:00:56,297 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:00:56,297 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:00:56,299 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:01:35,172 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:01:35,173 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 15:01:39,372 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:01:39,373 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:02:52,084 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:02:52,085 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:04:10,751 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:04:10,753 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:06:41,868 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:06:41,869 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:08:24,614 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:08:24,617 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:08:41,990 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:08:41,990 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:08:41,992 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:08:41,995 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:08:41,995 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:08:41,996 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:09:44,379 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND type = ? AND is_del = ?) 
2018-06-23 15:09:44,380 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:12:41,466 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:12:41,466 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:12:41,466 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:12:42,460 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.019 seconds (JVM running for 1340.947)
2018-06-23 15:13:53,610 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:13:53,611 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:13:53,611 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:14:15,033 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:14:15,033 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:14:15,033 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:14:24,081 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:14:24,081 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:14:24,081 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:14:25,163 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.119 seconds (JVM running for 1443.649)
2018-06-23 15:14:31,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:14:31,820 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:14:31,821 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:14:31,826 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:14:31,827 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:14:31,829 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:16:44,323 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:16:44,323 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:16:44,323 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:17:00,348 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:17:00,349 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:17:00,349 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:17:01,581 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.263 seconds (JVM running for 1600.065)
2018-06-23 15:17:08,877 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:17:08,879 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:17:08,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:17:20,111 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:17:20,113 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 15:17:20,114 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:17:26,606 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:17:26,607 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 15:17:26,608 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:17:41,846 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:17:41,847 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 15:17:41,848 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:18:36,390 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:18:36,390 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:18:36,391 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:18:36,392 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 15:18:36,393 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 1(Integer)
2018-06-23 15:18:49,802 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:18:49,803 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:18:49,804 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:18:49,809 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:18:49,810 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:18:49,811 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:19:12,727 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:19:12,728 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:19:12,729 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:19:12,730 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 15:19:12,730 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 1(Integer)
2018-06-23 15:19:55,111 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:19:55,111 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:19:55,111 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:19:56,061 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 0.977 seconds (JVM running for 1774.542)
2018-06-23 15:22:55,549 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 15:22:55,550 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 15:22:55,552 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:22:55,553 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 15:22:55,554 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 15:22:55,556 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 15:25:14,591 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 15:25:14,591 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 15:25:14,591 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 15:25:15,615 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.08 seconds (JVM running for 2094.092)
2018-06-23 15:30:19,855 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:30:19,857 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:30:19,859 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:30:19,863 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:30:19,864 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:30:19,865 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:30:21,608 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:30:21,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:30:21,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:30:21,616 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:30:21,616 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:30:21,618 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:31:49,447 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:31:49,448 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:31:49,449 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:49,452 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:31:49,452 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:31:49,453 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:50,428 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 15:31:50,429 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:31:50,430 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:50,431 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 15:31:50,431 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 15:31:50,433 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 15:31:52,435 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 15:31:52,435 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:31:52,436 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:52,437 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 15:31:52,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 20(Integer)
2018-06-23 15:31:52,439 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 15:31:53,703 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:31:53,704 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:31:53,705 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:53,708 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:31:53,709 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:31:53,710 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:31:55,871 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:31:55,872 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:31:55,873 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:55,876 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:31:55,876 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:31:55,885 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:31:58,591 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:31:58,591 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:31:58,592 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:31:58,596 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:31:58,596 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:31:58,597 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:04,415 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:33:04,415 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:33:04,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:04,420 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:33:04,420 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:33:04,421 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:06,275 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:06,275 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:06,276 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:06,279 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:06,280 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:06,281 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:08,245 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:08,246 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:08,247 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:08,251 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:08,251 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:08,252 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:10,062 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:10,063 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:10,064 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:10,067 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:10,068 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:10,069 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:34,338 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:33:34,338 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:33:34,339 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:34,342 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:33:34,343 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:33:34,344 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:38,902 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:38,903 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:38,904 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:38,907 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:38,907 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:38,908 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:41,728 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:41,728 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:41,729 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:41,732 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:41,732 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:41,733 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:44,147 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:44,147 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:44,148 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:44,151 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:44,152 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:44,153 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:52,177 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:33:52,177 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:33:52,179 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:52,182 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:33:52,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:33:52,183 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:57,039 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:57,040 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:57,041 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:57,044 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:57,045 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:57,046 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:33:59,727 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:33:59,727 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:33:59,728 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:33:59,732 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:33:59,732 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:33:59,733 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:34:02,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:34:02,879 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:34:02,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:34:02,884 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:34:02,884 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:34:02,886 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:34:33,989 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:34:33,989 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:34:33,991 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:34:33,994 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:34:33,994 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:34:33,995 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:34:38,328 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:34:38,328 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:34:38,330 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:34:38,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:34:38,333 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:34:38,335 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:35:02,410 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 15:35:02,411 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 15:35:02,412 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:02,416 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 15:35:02,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 15:35:02,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:06,414 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:35:06,415 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:35:06,416 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:06,419 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:35:06,419 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:35:06,420 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:35:10,070 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:35:10,070 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:35:10,071 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:10,075 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:35:10,075 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:35:10,077 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:35:13,197 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:35:13,197 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:35:13,198 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:13,202 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:35:13,202 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:35:13,203 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 15:35:15,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 15:35:15,879 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 15:35:15,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 15:35:15,883 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 15:35:15,883 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 15:35:15,884 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:10:59,416 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:10:59,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:10:59,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:10:59,420 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:10:59,428 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:10:59,429 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:11:30,033 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:11:30,034 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:11:30,035 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:11:30,038 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:11:30,038 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:11:30,039 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:12:25,560 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:12:25,560 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:12:25,562 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:12:25,565 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:12:25,565 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:12:25,566 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:12:27,114 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:12:27,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:12:27,116 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:12:27,119 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:12:27,119 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:12:27,120 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:12:58,410 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:12:58,410 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:12:58,411 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:12:58,414 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:12:58,414 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:12:58,415 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:13:00,836 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:13:00,837 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:13:00,838 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:13:00,841 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:13:00,842 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:13:00,843 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:14:33,814 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:14:33,814 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:14:33,816 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:14:33,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:14:33,819 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:14:33,820 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:14:42,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:14:42,020 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:14:42,021 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:14:42,025 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:14:42,025 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:14:42,026 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:15:22,988 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:15:22,989 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:15:22,990 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:15:22,993 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:15:22,993 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:15:22,994 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:15:24,921 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:15:24,921 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:15:24,922 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:15:24,926 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:15:24,926 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:15:24,927 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:16:09,222 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:16:09,222 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:16:09,224 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:16:09,227 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:16:09,227 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:16:09,228 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:16:12,190 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:16:12,190 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:16:12,192 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:16:12,195 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:16:12,195 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:16:12,197 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:17:20,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:17:20,438 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:17:20,447 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:17:20,450 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:17:20,450 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:17:20,451 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:17:22,427 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:17:22,428 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:17:22,429 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:17:22,432 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:17:22,432 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:17:22,433 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:18:32,536 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:18:32,536 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:18:32,539 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:18:32,542 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:18:32,543 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:18:32,544 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:18:34,900 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:18:34,900 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:18:34,901 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:18:34,905 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:18:34,905 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:18:34,906 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:19:30,422 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:19:30,422 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:19:30,424 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:19:30,427 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:19:30,427 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:19:30,428 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:19:32,866 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:19:32,866 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:19:32,868 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:19:32,871 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:19:32,871 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:19:32,873 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:20:20,384 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:20:20,384 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:20:20,386 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:20:20,388 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:20:20,389 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:20:20,390 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:10,390 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:21:10,390 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:21:10,391 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:10,394 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:21:10,395 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:21:10,396 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:14,877 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:21:14,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:21:14,879 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:14,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:21:14,883 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:21:14,884 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:21:49,375 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:21:49,376 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:21:49,377 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:49,380 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:21:49,380 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:21:49,381 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:51,411 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:21:51,411 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:21:51,413 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:21:51,416 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:21:51,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:21:51,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:22:51,754 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:22:51,754 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:22:51,766 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:22:51,769 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:22:51,769 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:22:51,770 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:22:53,751 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:22:53,752 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:22:53,773 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:22:53,777 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:22:53,777 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:22:53,793 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:28:32,959 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:28:32,959 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:28:32,961 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:28:32,963 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:28:32,964 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:28:32,965 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:28:34,955 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:28:34,955 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:28:34,956 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:28:34,960 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:28:34,960 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:28:34,961 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:29:43,067 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:29:43,067 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:29:43,069 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:29:43,071 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:29:43,072 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:29:43,073 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:29:45,123 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:29:45,123 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:29:45,124 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:29:45,127 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:29:45,128 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:29:45,129 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:30:56,539 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:30:56,539 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:30:56,540 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:30:56,543 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:30:56,544 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:30:56,545 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:31:00,398 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:31:00,398 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:31:00,399 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:31:00,403 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:31:00,403 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:31:00,404 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:33:26,647 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:33:26,647 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:33:26,649 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:26,651 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:33:26,652 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:33:26,653 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:28,820 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:33:28,821 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:33:28,822 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:28,825 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:33:28,826 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:33:28,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:33:30,890 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:33:30,890 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:33:30,891 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:30,895 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:33:30,895 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:33:30,896 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:33:32,483 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:33:32,483 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:33:32,485 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:32,488 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:33:32,488 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:33:32,490 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:33:34,727 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:33:34,728 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:33:34,729 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:34,733 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:33:34,733 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:33:34,734 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:33:34,741 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 16:33:34,742 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 16:33:34,743 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:33:34,746 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 16:33:34,747 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 16:33:34,748 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 16:50:13,240 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:50:13,241 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:50:13,242 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:50:13,245 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:50:13,245 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:50:13,247 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:51:15,254 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:51:15,255 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:51:15,256 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:51:15,259 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:51:15,259 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:51:15,260 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:52:11,767 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 16:52:11,767 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 16:52:11,768 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 16:52:13,051 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.315 seconds (JVM running for 7311.46)
2018-06-23 16:52:29,453 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 16:52:29,453 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 16:52:29,454 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 16:52:34,351 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 16:52:34,351 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 16:52:34,352 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 16:52:35,570 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.239 seconds (JVM running for 7333.979)
2018-06-23 16:52:35,857 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplicationTests on LongLi-PC with PID 8668 (started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 16:52:35,858 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 16:52:35,860 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 16:52:40,158 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplicationTests in 4.735 seconds (JVM running for 5.957)
2018-06-23 16:52:40,800 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM collection_template WHERE (is_del = ? AND create_user = ?) 
2018-06-23 16:52:40,962 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:52:40,992 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:52:40,995 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id, product_id, create_time, update_time, create_user, update_user, type, name from collection_template WHERE ( is_del = ? and create_user = ? ) LIMIT ? 
2018-06-23 16:52:40,998 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0(Short), 1af634b62499449d86f271b8107c4ac1(String), 1(Integer)
2018-06-23 16:52:41,001 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:52:41,035 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:52:41,037 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: jiangzhouzhou(String)
2018-06-23 16:52:41,039 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-06-23 16:53:16,040 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:53:16,041 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:53:16,042 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:53:16,047 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:53:16,047 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:53:16,048 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:53:34,445 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:53:34,445 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:53:34,447 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:53:34,449 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:53:34,450 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:53:34,451 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:54:04,960 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:54:04,961 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:54:04,962 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:54:04,965 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:54:04,965 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:54:04,966 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:54:35,050 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:54:35,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:54:35,051 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:54:35,054 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:54:35,054 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:54:35,056 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:55:18,777 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 16:55:18,777 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 16:55:18,777 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 16:55:20,387 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.644 seconds (JVM running for 7498.793)
2018-06-23 16:56:05,812 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:56:05,814 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:56:05,816 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:56:05,822 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:56:05,823 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:56:05,824 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:56:23,783 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:56:23,784 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:56:23,785 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:56:23,788 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:56:23,788 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:56:23,789 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:57:40,718 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 16:57:40,718 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 16:57:40,719 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 16:57:40,722 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 16:57:40,722 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 16:57:40,723 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:24,747 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:00:24,748 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:00:24,749 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:24,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:00:24,752 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:00:24,753 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:48,626 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:00:48,626 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:00:48,627 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:48,630 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:00:48,631 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:00:48,632 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:53,220 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:00:53,221 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:00:53,250 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:00:53,255 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:00:53,256 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:00:53,266 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:01:12,108 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:01:12,108 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:01:12,110 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:01:12,113 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:01:12,113 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:01:12,114 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:01:16,585 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:01:16,585 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:01:16,586 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:01:16,590 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:01:16,590 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:01:16,599 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:01:17,801 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:01:17,801 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:01:17,802 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:01:17,805 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:01:17,806 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:01:17,807 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:01:42,567 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:01:42,568 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:01:42,569 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:01:42,572 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:01:42,572 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:01:42,574 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:02:34,673 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:02:34,674 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:02:34,675 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:02:34,678 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:02:34,678 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:02:34,679 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:02:43,612 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:02:43,613 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:02:43,614 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:02:43,617 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:02:43,617 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:02:43,618 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:04:13,708 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:04:13,708 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:04:13,709 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:04:13,712 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:04:13,712 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:04:13,714 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:04:31,766 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:04:31,766 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:04:31,767 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:04:31,771 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:04:31,771 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:04:31,772 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:05:05,137 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:05:05,137 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:05:05,138 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:05:05,141 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:05:05,142 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:05:05,143 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:05:28,772 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:05:28,772 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:05:28,773 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:05:28,776 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:05:28,784 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:05:28,785 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:05:33,189 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:05:33,189 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:05:33,191 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:05:33,194 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:05:33,194 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:05:33,195 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:05:59,709 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:05:59,710 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:05:59,711 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:05:59,714 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:05:59,714 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:05:59,715 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:01,583 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:06:01,583 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:06:01,584 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:01,588 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:06:01,588 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:06:01,589 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:06:01,640 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:06:01,641 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 17:06:01,651 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:18,288 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:06:18,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:06:18,290 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:18,293 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:06:18,293 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:06:18,294 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:06:18,391 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:06:18,392 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 17:06:18,393 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:38,087 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:06:38,087 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:06:38,088 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:38,092 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:06:38,092 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:06:38,093 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:40,107 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:06:40,107 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:06:40,108 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:06:40,112 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:06:40,112 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:06:40,113 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:06:40,199 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:06:40,200 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 17:06:40,201 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:05,100 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:07:05,101 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:07:05,102 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:05,105 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:07:05,105 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:07:05,106 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:07,546 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:07:07,547 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:07:07,548 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:07,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:07:07,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:07:07,552 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:07:07,623 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:07:07,624 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 17:07:07,625 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:50,775 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:07:50,775 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 4(Short), 0(Short)
2018-06-23 17:07:50,784 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:54,090 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:07:54,091 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:07:54,092 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:07:54,092 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:07:54,093 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:07:54,095 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:07:57,184 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:07:57,185 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 17:07:57,186 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:08:00,830 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:08:00,830 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 17:08:00,831 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:08:27,840 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:08:27,840 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:08:27,841 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:08:27,844 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:08:27,844 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:08:27,845 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:08:30,005 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:08:30,005 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:08:30,006 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:08:30,010 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:08:30,010 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:08:30,011 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:09:41,719 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:09:41,720 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:09:41,721 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:09:41,724 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:09:41,724 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:09:41,725 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:09:43,746 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:09:43,746 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:09:43,747 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:09:43,750 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:09:43,751 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:09:43,752 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:09:50,469 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:09:50,469 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:09:50,470 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:09:50,474 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:09:50,474 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:09:50,475 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:09:58,074 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:09:58,074 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:09:58,075 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:09:58,078 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:09:58,078 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:09:58,079 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:10:13,629 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:10:13,629 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:10:13,630 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:10:13,633 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:10:13,633 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:10:13,634 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:10:15,969 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:10:15,969 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:10:15,970 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:10:15,974 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:10:15,974 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:10:15,975 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:10:19,960 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:10:19,960 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:10:19,961 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:10:19,962 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:10:19,962 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:10:19,964 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:11:44,991 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:11:44,992 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:11:44,993 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:11:44,995 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:11:44,996 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:11:44,997 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:11:47,251 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:11:47,251 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:11:47,252 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:11:47,256 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:11:47,256 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:11:47,257 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:11:47,339 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:11:47,339 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:11:47,340 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:11:47,341 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:11:47,341 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:11:47,342 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:13:18,276 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:13:18,276 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:13:18,278 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:18,282 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:13:18,283 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:13:18,285 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:19,984 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:13:19,985 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:13:19,986 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:19,989 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:13:19,989 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:13:19,990 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:13:20,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:13:20,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:13:20,058 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:20,059 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:13:20,059 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:13:20,060 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:13:43,927 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:13:43,928 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:13:43,929 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:43,932 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:13:43,932 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:13:43,933 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:45,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:13:45,887 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:13:45,888 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:45,891 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:13:45,892 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:13:45,893 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:13:45,942 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:13:45,942 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:13:45,943 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:13:45,944 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:13:45,944 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:13:45,946 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:17:47,856 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:17:47,857 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:17:47,858 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:17:47,860 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:17:47,861 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:17:47,862 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:17:51,474 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:17:51,474 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:17:51,475 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:17:51,478 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:17:51,478 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:17:51,479 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:17:51,529 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:17:51,530 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:17:51,531 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:17:51,531 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:17:51,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:17:51,534 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:18:07,959 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:18:07,959 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:18:07,959 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:23:51,207 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 2548 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:23:51,207 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:23:51,207 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:24:49,021 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:24:49,022 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:24:49,023 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:24:52,472 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.838 seconds (JVM running for 4.694)
2018-06-23 17:24:59,066 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:24:59,177 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 17:24:59,192 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:24:59,252 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:24:59,253 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 2(Short), 0(Short)
2018-06-23 17:24:59,254 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:07,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:25:07,797 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 1(Short), 0(Short)
2018-06-23 17:25:07,798 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:13,481 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:25:13,481 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:25:13,483 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:13,484 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:25:13,487 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:25:13,489 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:25:20,846 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:25:20,847 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:25:20,866 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:20,875 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:25:20,876 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:25:20,879 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:25:24,049 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:25:24,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:25:24,052 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:24,058 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:25:24,059 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:25:24,060 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:26,337 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:25:26,338 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:25:26,339 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:26,343 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:25:26,343 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:25:26,345 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:25:26,370 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:25:26,370 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:25:26,372 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:25:26,373 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:25:26,374 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:25:26,377 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:26:32,454 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:26:32,454 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:26:32,454 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:26:33,509 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.079 seconds (JVM running for 105.729)
2018-06-23 17:27:05,884 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:27:05,886 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:27:05,888 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:27:05,893 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:27:05,893 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:27:05,895 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:27:08,229 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:27:08,231 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:27:08,233 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:27:08,239 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:27:08,240 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:27:08,242 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:27:08,280 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:27:08,282 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:27:08,284 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:27:08,285 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:27:08,286 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:27:08,287 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:27:59,528 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:27:59,529 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:27:59,530 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:27:59,533 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:27:59,533 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:27:59,535 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:28:13,031 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:28:13,031 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:28:13,033 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:28:13,036 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:28:13,036 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:28:13,037 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:30:50,388 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:30:50,388 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:30:50,389 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:30:51,419 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.054 seconds (JVM running for 363.636)
2018-06-23 17:33:32,914 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:33:32,915 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:33:32,915 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:33:34,190 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.319 seconds (JVM running for 526.405)
2018-06-23 17:38:06,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:38:06,058 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:38:06,060 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:06,065 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:38:06,066 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:38:06,067 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:09,555 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:38:09,556 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:38:09,557 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:09,562 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:38:09,563 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:38:09,597 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:38:09,829 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:38:09,830 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:38:09,831 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:09,832 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:38:09,833 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:38:09,834 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:38:30,833 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:38:30,833 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:38:30,834 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:30,838 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:38:30,838 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:38:30,839 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:32,741 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:38:32,742 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:38:32,743 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:32,747 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:38:32,747 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:38:32,748 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:38:32,811 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:38:32,811 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:38:32,813 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:32,813 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:38:32,814 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:38:32,815 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:38:47,567 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:38:47,567 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:38:47,568 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:47,571 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:38:47,572 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:38:47,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:49,816 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:38:49,816 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:38:49,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:49,820 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:38:49,821 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:38:49,823 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:38:49,863 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:38:49,863 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:38:49,864 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:38:49,864 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:38:49,865 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:38:49,866 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:40:03,708 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:40:03,708 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:40:03,710 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:03,713 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:40:03,713 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:40:03,714 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:05,644 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:40:05,645 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:40:05,646 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:05,649 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:40:05,649 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:40:05,651 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:40:05,706 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:40:05,706 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:40:05,708 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:05,708 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:40:05,708 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:40:05,710 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:40:28,826 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:40:28,826 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:40:28,828 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:28,831 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:40:28,831 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:40:28,832 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:30,906 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:40:30,906 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:40:30,907 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:30,911 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:40:30,911 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:40:30,912 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:40:30,973 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:40:30,973 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:40:30,974 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:40:30,975 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:40:30,975 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:40:30,976 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:41:31,973 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:41:31,973 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:41:31,974 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:41:31,977 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:41:31,977 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:41:31,978 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:41:34,095 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:41:34,095 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:41:34,096 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:41:34,100 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:41:34,100 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:41:34,101 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:41:34,155 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:41:34,155 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:41:34,156 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:41:34,157 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:41:34,157 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:41:34,159 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:42:30,758 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:42:30,758 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:42:30,758 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:42:32,247 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.525 seconds (JVM running for 1064.454)
2018-06-23 17:42:44,005 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:42:44,006 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:42:44,008 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:44,013 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:42:44,013 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:42:44,014 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:46,059 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:42:46,060 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:42:46,061 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:46,067 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:42:46,068 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:42:46,069 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:42:46,124 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:42:46,125 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:42:46,126 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:46,127 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:42:46,128 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:42:46,129 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:42:49,056 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:42:49,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:42:49,058 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:49,060 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:42:49,061 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:42:49,062 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:42:49,131 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:42:49,131 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:42:49,132 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:42:49,133 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:42:49,133 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:42:49,135 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:43:43,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:43:43,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:43:43,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:43:43,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:43:43,883 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:43:43,884 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:43:45,626 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:43:45,626 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:43:45,627 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:43:45,630 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:43:45,631 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:43:45,633 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:43:45,691 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:43:45,691 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:43:45,692 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:43:45,693 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:43:45,693 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:43:45,695 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:46:53,868 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:46:53,868 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:46:53,870 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:46:53,873 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:46:53,873 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:46:53,874 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:46:57,995 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:46:57,996 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:46:57,997 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:46:58,000 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:46:58,000 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:46:58,001 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:46:58,018 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:46:58,018 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:46:58,024 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:46:58,025 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:46:58,025 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:46:58,027 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:49:44,346 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:49:44,346 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:49:44,347 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:49:44,350 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:49:44,350 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:49:44,352 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:49:46,308 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:49:46,309 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:49:46,310 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:49:46,313 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:49:46,314 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:49:46,315 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:49:46,365 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:49:46,365 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:49:46,366 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:49:46,367 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:49:46,367 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:49:46,369 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:49:54,743 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:49:54,743 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:49:54,745 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:49:54,748 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:49:54,748 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:49:54,749 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:52:34,109 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:52:34,110 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:52:34,111 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:52:34,115 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:52:34,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:52:34,116 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:52:35,828 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:52:35,828 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:52:35,829 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:52:35,832 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:52:35,833 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:52:35,834 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:52:35,885 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:52:35,885 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:52:35,886 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:52:35,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:52:35,887 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:52:35,889 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:53:55,014 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:53:55,014 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:53:55,016 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:53:55,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:53:55,019 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:53:55,020 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:53:57,280 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:53:57,280 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:53:57,281 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:53:57,285 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:53:57,285 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:53:57,286 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:53:57,341 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:53:57,341 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:53:57,343 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:53:57,343 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:53:57,344 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:53:57,345 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:57:44,424 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-06-23 17:57:44,424 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 陈俊方(String)
2018-06-23 17:57:44,426 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:57:44,428 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-06-23 17:57:44,434 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:57:44,435 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:57:46,528 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id from price_publish.dict_type where code = ? 
2018-06-23 17:57:46,529 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: marketType(String)
2018-06-23 17:57:46,530 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:57:46,533 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id,name,code from dict where dict_type_id = ? 
2018-06-23 17:57:46,534 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5c18c9f0543e4b97a5898e6c65146286(String)
2018-06-23 17:57:46,535 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-06-23 17:57:46,576 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM market WHERE (region_id = ? AND market_type = ? AND is_del = ?) 
2018-06-23 17:57:46,576 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short)
2018-06-23 17:57:46,577 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:57:46,578 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, name, code, market_type, price_type, create_time, update_time, create_user, update_user, region_id, is_del, region_type from market WHERE ( region_id = ? and market_type = ? and is_del = ? ) LIMIT ? 
2018-06-23 17:57:46,579 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 15dfbb149b5a419f96f15cc0feae5d39(String), 3(Short), 0(Short), 10(Integer)
2018-06-23 17:57:46,580 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-06-23 17:58:56,867 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 17:58:56,867 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 17:58:56,867 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 17:58:57,930 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 1.103 seconds (JVM running for 2050.125)
2018-06-23 17:59:27,198 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, user_id, market_id from market_recent_use WHERE ( user_id = ? ) 
2018-06-23 17:59:27,200 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1af634b62499449d86f271b8107c4ac1(String)
2018-06-23 17:59:27,202 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-06-23 17:59:27,204 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name from market where id = ? 
2018-06-23 17:59:27,205 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1051f9bf3b4144c0b2ac9d4749cc1f42(String)
2018-06-23 17:59:27,206 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:59:27,207 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name from market where id = ? 
2018-06-23 17:59:27,207 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 16a8ef2c7b0943828e004a9a76d7ffd0(String)
2018-06-23 17:59:27,208 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:59:27,208 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name from market where id = ? 
2018-06-23 17:59:27,209 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 39f70a2a6f644425b5407c46720b9100(String)
2018-06-23 17:59:27,210 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 17:59:27,210 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select name from market where id = ? 
2018-06-23 17:59:27,210 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 45adce375aa64c7982dd9bcdae449013(String)
2018-06-23 17:59:27,211 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-06-23 18:08:16,651 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on LongLi-PC with PID 9496 (D:\ideaWorkSpace\price-publishing-system\target\classes started by zcy in D:\ideaWorkSpace\price-publishing-system)
2018-06-23 18:08:16,652 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-06-23 18:08:16,652 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2018-06-23 18:08:17,606 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 0.981 seconds (JVM running for 2609.794)
2018-07-27 11:29:18,149 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16420 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:29:18,152 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:29:18,155 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:29:28,610 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 11.238 seconds (JVM running for 16.546)
2018-07-27 11:33:53,519 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * from user_info user where user.name = ? 
2018-07-27 11:33:53,712 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: admin(String)
2018-07-27 11:33:53,741 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-07-27 11:33:53,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select user_id, region_id, type from user_ref_area WHERE ( user_id = ? ) 
2018-07-27 11:33:53,798 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:33:53,804 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-07-27 11:34:10,464 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@7b779d90
2018-07-27 11:34:10,465 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:34:10,465 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:34:10,482 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:34:10,755 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 2 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]] [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 11:34:10,756 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:34:10,772 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: f5c9469cee274935a6616dde46595dc3(String), b8d11ee289394be688ef3a4f6968efed(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 64737(Integer), null, null, 2018-07-27 11:34:10.753(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 2 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]] [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), null
2018-07-27 11:34:10,872 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:36:02,430 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 13576 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:36:02,432 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:36:02,434 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:36:10,744 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 8.967 seconds (JVM running for 11.385)
2018-07-27 11:36:15,118 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1f601780
2018-07-27 11:36:15,118 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:36:15,119 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:36:15,588 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:36:15,649 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Content type 'text/plain;charset=UTF-8' not supported
2018-07-27 11:36:16,074 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:36:16,258 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: c8838116a031441bae111e3fcfed44c0(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 65087(Integer), null, null, 2018-07-27 11:36:15.649(Timestamp), Content type 'text/plain;charset=UTF-8' not supported(String), null
2018-07-27 11:36:16,319 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:37:44,006 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1f601780
2018-07-27 11:37:44,008 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:37:44,008 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:37:44,018 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:37:44,025 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Content type 'text/plain;charset=UTF-8' not supported
2018-07-27 11:37:44,048 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:37:44,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 98d0c9cfdf2847ec880d877dd98a2a23(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 49288(Integer), null, null, 2018-07-27 11:37:44.025(Timestamp), Content type 'text/plain;charset=UTF-8' not supported(String), null
2018-07-27 11:37:44,103 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:38:04,318 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1f601780
2018-07-27 11:38:04,318 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:38:04,318 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:38:04,322 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:38:04,553 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 2 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]] [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 11:38:04,555 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:38:04,558 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bbea31432f144ef391c3035d0d157e6d(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 49288(Integer), null, null, 2018-07-27 11:38:04.553(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 2 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]] [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), null
2018-07-27 11:38:04,637 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:41:01,685 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1f601780
2018-07-27 11:41:01,686 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:41:01,686 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:41:01,689 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:41:01,691 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]] 
2018-07-27 11:41:01,694 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:41:01,700 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 3095a1934f2c4a74b0bd05c64fe982cb(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 50183(Integer), null, null, 2018-07-27 11:41:01.691(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'county': rejected value [null]; codes [NotNull.marketRep.county,NotNull.county,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.county,county]; arguments []; default message [county]]; default message [市场绑定区域的最小单元为区、县]](String), null
2018-07-27 11:41:01,706 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:41:40,706 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 13576 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:41:40,707 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:41:40,707 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:41:44,363 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.765 seconds (JVM running for 344.992)
2018-07-27 11:41:47,616 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@3a7146d
2018-07-27 11:41:47,617 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:41:47,618 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:41:47,652 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:41:47,681 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Required String parameter 'userId' is not present
2018-07-27 11:41:47,779 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:41:47,783 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 4257223563e84f128e0e5ff2411d61fc(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 50324(Integer), null, null, 2018-07-27 11:41:47.681(Timestamp), Required String parameter 'userId' is not present(String), null
2018-07-27 11:41:47,844 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:42:02,468 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@3a7146d
2018-07-27 11:42:02,468 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:42:02,469 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:42:02,473 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:42:02,476 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>null<:=====:>Required String parameter 'userId' is not present
2018-07-27 11:42:02,477 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:42:02,479 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ab48205c003a4214956bcf69a7741931(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 50324(Integer), null, null, 2018-07-27 11:42:02.476(Timestamp), Required String parameter 'userId' is not present(String), null
2018-07-27 11:42:02,514 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:43:07,384 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@3a7146d
2018-07-27 11:43:07,384 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:43:07,385 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:43:07,389 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:43:07,418 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code, type, create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:43:07,425 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type' in 'class com.hywa.pricepublish.dao.entity.Market'
2018-07-27 11:43:07,425 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:43:07,426 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 89edf4846b8443748d145ac2e6919547(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 50564(Integer), null, null, 2018-07-27 11:43:07.425(Timestamp), nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type' in 'class com.hywa.pricepublish.dao.entity.Market'(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:43:07,461 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:43:16,451 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@3a7146d
2018-07-27 11:43:16,451 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:43:16,451 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:43:16,456 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:43:16,460 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code, type, create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:43:16,463 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type' in 'class com.hywa.pricepublish.dao.entity.Market'
2018-07-27 11:43:16,464 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:43:16,465 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1bcc39c622cb45cd9e68c0b373a99747(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 50564(Integer), null, null, 2018-07-27 11:43:16.463(Timestamp), nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type' in 'class com.hywa.pricepublish.dao.entity.Market'(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:43:16,500 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:46:20,116 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 13576 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:46:20,117 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:46:20,117 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:46:25,114 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 5.112 seconds (JVM running for 625.734)
2018-07-27 11:46:33,208 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:46:33,208 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:46:33,209 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:46:33,242 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:46:33,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:46:33,341 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 71d0f3e51bb348f68927329a23813587(String), aa(String), null, 2018-07-27 11:46:33.331(Timestamp), 2018-07-27 11:46:33.331(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, null, 0(Short), 3(Short)
2018-07-27 11:46:33,360 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
2018-07-27 11:46:33,361 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:46:33,363 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9b0f55818e47400a803d6d09d1cae444(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51101(Integer), null, null, 2018-07-27 11:46:33.36(Timestamp), ### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:46:33,368 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:48:13,851 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:48:13,852 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:48:13,853 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:48:13,859 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:48:13,869 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>JSON parse error: Cannot deserialize value of type `java.lang.Short` from String "131024": overflow, value cannot be represented as 16-bit value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Short` from String "131024": overflow, value cannot be represented as 16-bit value
 at [Source: (PushbackInputStream); line: 6, column: 31] (through reference chain: com.hywa.pricepublish.representation.MarketRep["regionType"])
2018-07-27 11:48:13,875 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:48:13,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 865420a3ed34403f9f914d33e071cbf7(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:48:13.869(Timestamp), JSON parse error: Cannot deserialize value of type `java.lang.Short` from String "131024": overflow, value cannot be represented as 16-bit value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Short` from String "131024": overflow, value cannot be represented as 16-bit value
 at [Source: (PushbackInputStream); line: 6, column: 31] (through reference chain: com.hywa.pricepublish.representation.MarketRep["regionType"])(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:48:13,940 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:49:11,255 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:49:11,255 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:49:11,255 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:49:11,259 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:49:11,263 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:11,264 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 18f701bf2d8a481798a4c11e78051264(String), aa(String), null, 2018-07-27 11:49:11.262(Timestamp), 2018-07-27 11:49:11.262(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, null, 0(Short), 3(Short)
2018-07-27 11:49:11,287 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
2018-07-27 11:49:11,288 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:11,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 8f465bc9bd7a448ab5c243740de70d10(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:49:11.287(Timestamp), ### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:49:11,298 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:49:19,000 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:49:19,000 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:49:19,000 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:49:19,008 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:49:19,011 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:19,014 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 717a02b79f0645309768331a89b0689d(String), aa(String), null, 2018-07-27 11:49:19.01(Timestamp), 2018-07-27 11:49:19.01(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, null, 0(Short), 3(Short)
2018-07-27 11:49:19,026 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
2018-07-27 11:49:19,026 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:19,027 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1afb8f302af3408f98cb57fa3d31738c(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:49:19.026(Timestamp), ### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:49:19,034 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:49:48,583 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:49:48,583 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:49:48,584 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:49:48,589 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:49:48,592 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:48,594 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 81991871189146e39151efdca771d25d(String), aa(String), null, 2018-07-27 11:49:48.592(Timestamp), 2018-07-27 11:49:48.592(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, null, 0(Short), 3(Short)
2018-07-27 11:49:48,606 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
2018-07-27 11:49:48,607 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:49:48,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 81df22c1ae7b4dfd8308a01b8752cb81(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:49:48.606(Timestamp), ### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null
; ]; Column 'region_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'region_id' cannot be null(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:49:48,614 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:50:42,109 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:50:42,109 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:50:42,109 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:50:42,113 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:50:42,117 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:50:42,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 8b0822c190ac489c91531a640771ef70(String), aa(String), null, 2018-07-27 11:50:42.116(Timestamp), 2018-07-27 11:50:42.116(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short)
2018-07-27 11:50:42,136 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value
2018-07-27 11:50:42,137 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:50:42,139 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 961d8ecab5e6425f9dc0cf27ae0edba5(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:50:42.135(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:50:42,159 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:50:53,621 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:50:53,621 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:50:53,621 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:50:53,624 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:50:53,632 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:50:53,634 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 30a6cf4256aa4180a124a7499be17f9a(String), aa(String), null, 2018-07-27 11:50:53.631(Timestamp), 2018-07-27 11:50:53.631(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short)
2018-07-27 11:50:53,657 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value
2018-07-27 11:50:53,659 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:50:53,664 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: fd38ed541ec24bfaa6c1aa94bf20452c(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 51417(Integer), null, null, 2018-07-27 11:50:53.656(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:50:53,681 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:51:55,106 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:51:55,106 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:51:55,106 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:51:55,227 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:51:55,233 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:51:55,235 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 77187f851bef481193111a5b4d7fea27(String), aa(String), null, 2018-07-27 11:51:55.232(Timestamp), 2018-07-27 11:51:55.232(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short)
2018-07-27 11:51:55,244 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value
2018-07-27 11:51:55,245 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:51:55,247 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9b6e83053e8546fc8cea9f0b2729d983(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 52213(Integer), null, null, 2018-07-27 11:51:55.244(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:51:55,253 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:52:26,891 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:52:26,891 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:52:26,891 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:52:26,894 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:52:26,900 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:52:26,903 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dafa54dfd381431e9cebc1631a18862d(String), aa(String), null, 2018-07-27 11:52:26.899(Timestamp), 2018-07-27 11:52:26.899(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short)
2018-07-27 11:52:26,916 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value
2018-07-27 11:52:26,917 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:52:26,920 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: d6fb1ece0f104df6963bd7f068ebc16c(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 52213(Integer), null, null, 2018-07-27 11:52:26.916(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:52:26,931 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:52:45,756 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@18a97402
2018-07-27 11:52:45,756 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:52:45,757 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:52:45,760 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:53:19,947 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:53:19,951 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1bf189706dc54d128f4c1bf1e52afc67(String), aa(String), null, 2018-07-27 11:52:45.764(Timestamp), 2018-07-27 11:52:45.764(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short)
2018-07-27 11:53:19,967 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value
2018-07-27 11:53:19,968 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:53:19,971 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 6789e3eee3774265a7469f2d313a847a(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 52213(Integer), null, null, 2018-07-27 11:53:19.967(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?)
### Cause: java.sql.SQLException: Field 'market_type' doesn't have a default value
; ]; Field 'market_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'market_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:53:19,982 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:54:15,508 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 13576 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:54:15,509 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:54:15,509 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:54:28,218 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 12.842 seconds (JVM running for 1108.822)
2018-07-27 11:54:28,476 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@701050ba
2018-07-27 11:54:28,477 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:54:28,477 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:54:28,525 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:54:35,709 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type,market_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,, ?) 
2018-07-27 11:54:35,765 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type,market_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?,, ?)
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?); nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)
2018-07-27 11:54:35,767 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:54:35,774 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 7c347d347d7f4e3eba3f344083aff2db(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 52821(Integer), null, null, 2018-07-27 11:54:35.765(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type,market_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?,, ?)
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?); nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 203, line 7, column 13, token COMMA : insert into market (id, name, code,create_time, update_time,
      create_user, update_user, region_id, 
      is_del, region_type,market_type)
    values (?, ?, ?,
    ?, ?,
      ?, ?, ?, 
      ?, ?,, ?)(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:54:35,789 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:55:48,751 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:55:48,753 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:55:48,755 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:55:56,182 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 8.363 seconds (JVM running for 11.99)
2018-07-27 11:56:00,100 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@4287e3c6
2018-07-27 11:56:00,100 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:56:00,101 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:56:00,513 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:56:01,138 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type,market_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:56:01,280 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 6a946979583e41bd89c949761c285fff(String), aa(String), null, 2018-07-27 11:56:01.113(Timestamp), 2018-07-27 11:56:01.114(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short), 3287a8f57c784698913b5128ed2b7320(String)
2018-07-27 11:56:01,358 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>
### Error updating database.  Cause: java.sql.SQLException: Field 'price_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type,market_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?, ?)
### Cause: java.sql.SQLException: Field 'price_type' doesn't have a default value
; ]; Field 'price_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'price_type' doesn't have a default value
2018-07-27 11:56:01,360 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:56:01,362 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 390f9cef7a9043f5be9faf92bd9d272a(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 53150(Integer), null, null, 2018-07-27 11:56:01.358(Timestamp), ### Error updating database.  Cause: java.sql.SQLException: Field 'price_type' doesn't have a default value
### The error may involve com.hywa.pricepublish.dao.mapper.MarketMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into market (id, name, code,create_time, update_time,       create_user, update_user, region_id,        is_del, region_type,market_type)     values (?, ?, ?,     ?, ?,       ?, ?, ?,        ?, ?, ?)
### Cause: java.sql.SQLException: Field 'price_type' doesn't have a default value
; ]; Field 'price_type' doesn't have a default value; nested exception is java.sql.SQLException: Field 'price_type' doesn't have a default value(String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:56:01,368 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:57:06,395 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:57:06,396 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:57:06,396 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:57:08,825 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 2.486 seconds (JVM running for 84.63)
2018-07-27 11:57:13,868 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1cd63c6c
2018-07-27 11:57:13,869 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:57:13,870 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:57:13,893 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:57:13,992 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into market (id, name, code,create_time, update_time, create_user, update_user, region_id, is_del, region_type,market_type,price_type) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:57:13,994 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ec9a7b0f770943b980608cb72e25fe5f(String), aa(String), null, 2018-07-27 11:57:13.989(Timestamp), 2018-07-27 11:57:13.99(Timestamp), b8d11ee289394be688ef3a4f6968efed(String), null, 131024(String), 0(Short), 3(Short), 3287a8f57c784698913b5128ed2b7320(String), 1e1e5e7932f04b928a47794d762eab0a(String)
2018-07-27 11:57:13,999 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 1
2018-07-27 11:57:26,164 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1cd63c6c
2018-07-27 11:57:26,165 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:57:26,165 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:57:26,167 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:57:26,179 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 11:57:26,180 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:57:26,182 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 5dd18af718004e7ab160ea330108e8b8(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 53439(Integer), null, null, 2018-07-27 11:57:26.178(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:57:26,190 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:57:39,179 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1cd63c6c
2018-07-27 11:57:39,179 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:57:39,179 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:57:39,182 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:57:39,183 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 11:57:39,184 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:57:39,185 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ed347d50c90d4c19a94690ee5acc972d(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 53439(Integer), null, null, 2018-07-27 11:57:39.183(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:57:39,192 ERROR (GlobalDefaultExceptionHandler.java:78)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 11:58:52,527 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 11:58:52,527 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 11:58:52,527 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 11:58:56,329 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.862 seconds (JVM running for 192.131)
2018-07-27 11:59:01,249 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@5bd82666
2018-07-27 11:59:01,250 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 11:59:01,250 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 11:59:01,272 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 11:59:01,284 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 11:59:01,343 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 11:59:01,345 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ff89ed2e329942699034e238e6913662(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 53645(Integer), null, null, 2018-07-27 11:59:01.284(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 11:59:01,353 ERROR (GlobalDefaultExceptionHandler.java:75)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:03:09,176 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:03:09,178 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:03:09,179 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:03:21,808 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 12.765 seconds (JVM running for 457.601)
2018-07-27 12:03:27,115 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@50700f37
2018-07-27 12:03:27,116 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:03:27,117 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:03:27,149 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:03:27,169 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:03:27,171 ERROR (GlobalDefaultExceptionHandler.java:67)- Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:03:27,228 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:03:27,232 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 0718a6acbfb74b89820d23dd44f0552a(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 54416(Integer), null, null, 2018-07-27 12:03:27.169(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:03:27,241 ERROR (GlobalDefaultExceptionHandler.java:76)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:04:22,875 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:04:22,878 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:04:22,878 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:04:27,991 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 5.415 seconds (JVM running for 523.782)
2018-07-27 12:04:30,993 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1f0ab9f
2018-07-27 12:04:30,994 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:04:30,995 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:04:31,022 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:04:31,039 ERROR (GlobalDefaultExceptionHandler.java:51)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:04:31,040 ERROR (GlobalDefaultExceptionHandler.java:67)- class org.springframework.web.bind.MethodArgumentNotValidException
2018-07-27 12:04:31,098 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:04:31,100 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9bdcb840794749d1bfca06b4cbc35cf1(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 54552(Integer), null, null, 2018-07-27 12:04:31.038(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:04:31,108 ERROR (GlobalDefaultExceptionHandler.java:76)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:05:37,088 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:05:37,089 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:05:37,089 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:05:40,294 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.271 seconds (JVM running for 596.083)
2018-07-27 12:05:48,414 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@565d3b14
2018-07-27 12:05:48,415 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:05:48,416 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:05:48,441 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:05:48,456 ERROR (GlobalDefaultExceptionHandler.java:54)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:06:10,318 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@565d3b14
2018-07-27 12:06:10,318 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:06:10,319 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:06:10,323 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:06:10,326 ERROR (GlobalDefaultExceptionHandler.java:54)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:12:47,495 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 16452 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:12:47,497 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:12:47,497 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:12:54,438 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 7.118 seconds (JVM running for 1030.213)
2018-07-27 12:13:01,677 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@38972b37
2018-07-27 12:13:01,678 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:13:01,679 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:13:01,723 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:13:01,778 ERROR (GlobalDefaultExceptionHandler.java:55)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:13:01,784 ERROR (GlobalDefaultExceptionHandler.java:72)- {marketRep=MarketRep(marketId=8fae514a19ca4baa9f3766dfd63a4fb8, marketName=null, marketType=3287a8f57c784698913b5128ed2b7320, regionId=131024, regionType=1, priceType=1e1e5e7932f04b928a47794d762eab0a, province=null, city=null, county=131024, town=null, village=null), org.springframework.validation.BindingResult.marketRep=org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]}
2018-07-27 12:13:01,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:13:01,899 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: a6c253d84092468f865d428d304edc63(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 55343(Integer), null, null, 2018-07-27 12:13:01.778(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:13:01,914 ERROR (GlobalDefaultExceptionHandler.java:83)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:13:38,047 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@38972b37
2018-07-27 12:13:38,048 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:13:38,049 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:13:38,053 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:13:38,055 ERROR (GlobalDefaultExceptionHandler.java:55)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:13:38,056 ERROR (GlobalDefaultExceptionHandler.java:72)- {marketRep=MarketRep(marketId=8fae514a19ca4baa9f3766dfd63a4fb8, marketName=null, marketType=3287a8f57c784698913b5128ed2b7320, regionId=131024, regionType=1, priceType=1e1e5e7932f04b928a47794d762eab0a, province=null, city=null, county=131024, town=null, village=null), org.springframework.validation.BindingResult.marketRep=org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]}
2018-07-27 12:13:38,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:13:38,058 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 4654f8b9aa8948749db986a0720535ef(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 55343(Integer), null, null, 2018-07-27 12:13:38.055(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:13:38,064 ERROR (GlobalDefaultExceptionHandler.java:83)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:13:52,107 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:13:52,109 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:13:52,111 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:13:59,504 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 8.112 seconds (JVM running for 10.35)
2018-07-27 12:14:14,655 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@705a45c0
2018-07-27 12:14:14,655 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:14:14,656 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:14:15,027 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:14:15,279 ERROR (GlobalDefaultExceptionHandler.java:55)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:14:15,280 ERROR (GlobalDefaultExceptionHandler.java:72)- {marketRep=MarketRep(marketId=8fae514a19ca4baa9f3766dfd63a4fb8, marketName=null, marketType=3287a8f57c784698913b5128ed2b7320, regionId=131024, regionType=1, priceType=1e1e5e7932f04b928a47794d762eab0a, province=null, city=null, county=131024, town=null, village=null), org.springframework.validation.BindingResult.marketRep=org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]}
2018-07-27 12:14:15,698 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:14:15,872 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: f1bdfda6b32549b4a052ee5a97c71114(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 55469(Integer), null, null, 2018-07-27 12:14:15.278(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:14:15,973 ERROR (GlobalDefaultExceptionHandler.java:83)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:15:48,489 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:15:48,490 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:15:48,491 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:15:51,590 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.174 seconds (JVM running for 122.433)
2018-07-27 12:16:03,196 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@e7ba49a
2018-07-27 12:16:03,197 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:16:03,198 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:16:03,215 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:16:03,232 ERROR (GlobalDefaultExceptionHandler.java:57)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:16:03,233 ERROR (GlobalDefaultExceptionHandler.java:74)- [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]]
2018-07-27 12:16:03,285 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:16:03,287 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 9010761551994133970783c0f013edfc(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 56018(Integer), null, null, 2018-07-27 12:16:03.231(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:16:03,293 ERROR (GlobalDefaultExceptionHandler.java:85)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:19:14,743 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:19:14,748 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:19:14,748 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:19:18,345 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 3.787 seconds (JVM running for 329.181)
2018-07-27 12:19:25,997 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@5a240108
2018-07-27 12:19:26,000 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:19:26,001 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:19:26,022 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:19:26,038 ERROR (GlobalDefaultExceptionHandler.java:58)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:24:46,330 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:24:46,331 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:24:46,332 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:25:06,187 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 19.931 seconds (JVM running for 677.012)
2018-07-27 12:26:11,116 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:26:11,122 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:26:11,123 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:26:17,078 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 6.102 seconds (JVM running for 747.9)
2018-07-27 12:26:18,742 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@35180a79
2018-07-27 12:26:18,779 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:26:18,780 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:26:19,070 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:26:19,171 ERROR (GlobalDefaultExceptionHandler.java:58)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:26:19,172 ERROR (GlobalDefaultExceptionHandler.java:79)- 市场名称不能为空
2018-07-27 12:26:19,488 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:26:19,966 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 6db3be1f492545d5bde75b9e58d0683b(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 60636(Integer), null, null, 2018-07-27 12:26:19.171(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:26:19,996 ERROR (GlobalDefaultExceptionHandler.java:92)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:28:31,638 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:28:31,639 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:28:31,640 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:28:36,625 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 5.209 seconds (JVM running for 887.443)
2018-07-27 12:29:02,387 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@cca0f53
2018-07-27 12:29:02,388 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:29:02,389 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:29:02,434 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:29:02,456 ERROR (GlobalDefaultExceptionHandler.java:58)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:29:02,457 ERROR (GlobalDefaultExceptionHandler.java:74)- class org.springframework.web.bind.MethodArgumentNotValidException
2018-07-27 12:29:02,457 ERROR (GlobalDefaultExceptionHandler.java:80)- 市场名称不能为空
2018-07-27 12:29:02,526 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:29:02,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 66499ff0600d4e9d911dab194127a414(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 60964(Integer), null, null, 2018-07-27 12:29:02.455(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:29:02,543 ERROR (GlobalDefaultExceptionHandler.java:93)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:30:19,393 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@cca0f53
2018-07-27 12:30:19,393 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:30:19,394 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:30:19,400 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:30:19,409 ERROR (GlobalDefaultExceptionHandler.java:58)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:30:23,551 ERROR (GlobalDefaultExceptionHandler.java:74)- class org.springframework.web.bind.MethodArgumentNotValidException
2018-07-27 12:30:32,641 ERROR (GlobalDefaultExceptionHandler.java:80)- 市场名称不能为空
2018-07-27 12:30:46,733 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:30:46,847 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 20093c3747684ed8b787f17bc6af6109(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 61050(Integer), null, null, 2018-07-27 12:30:19.407(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:30:58,273 ERROR (GlobalDefaultExceptionHandler.java:93)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:31:09,714 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:31:09,719 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:31:09,719 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:31:21,407 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 12.132 seconds (JVM running for 1052.219)
2018-07-27 12:31:22,138 INFO (TokenAuthorFilter.java:69)- com.hywa.pricepublish.config.interceptor.RedisTokenManager@1c31377f
2018-07-27 12:31:22,141 INFO (TokenAuthorFilter.java:70)- b8d11ee289394be688ef3a4f6968efed_ccd4928b51e246ae87a2e72b54e62e9f
2018-07-27 12:31:22,141 INFO (RedisTokenManager.java:33)- tokenModel : TokenModel(userId=b8d11ee289394be688ef3a4f6968efed, token=ccd4928b51e246ae87a2e72b54e62e9f)
2018-07-27 12:31:22,189 INFO (TokenAuthorFilter.java:109)- token filter过滤ok!
2018-07-27 12:31:22,239 ERROR (GlobalDefaultExceptionHandler.java:58)- http://192.168.1.81:8080/collect/market/add<:=====:>POST<:=====:>userId=b8d11ee289394be688ef3a4f6968efed<:=====:>Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]] 
2018-07-27 12:31:31,739 ERROR (GlobalDefaultExceptionHandler.java:74)- class org.springframework.web.bind.MethodArgumentNotValidException
2018-07-27 12:31:31,745 ERROR (GlobalDefaultExceptionHandler.java:80)- 市场名称不能为空
2018-07-27 12:31:31,889 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: insert into log (id, userId, req_ip, req_uri, req_host, req_port, error_code, error_message, create_time, real_error_message, parameter) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2018-07-27 12:31:31,908 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: c166597844034b7eaa8f00037b1d9bd1(String), 临时用户(String), 192.168.1.249(String), /collect/market/add(String), 192.168.1.249(String), 61123(Integer), null, null, 2018-07-27 12:31:22.239(Timestamp), Validation failed for argument at index 0 in method: public org.springframework.http.ResponseEntity<com.hywa.pricepublish.representation.ResponseBase> com.hywa.pricepublish.controller.collect.MarketController.addMarket(com.hywa.pricepublish.representation.MarketRep,java.lang.String), with 1 error(s): [Field error in object 'marketRep' on field 'marketName': rejected value [null]; codes [NotNull.marketRep.marketName,NotNull.marketName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [marketRep.marketName,marketName]; arguments []; default message [marketName]]; default message [市场名称不能为空]](String), userId=b8d11ee289394be688ef3a4f6968efed(String)
2018-07-27 12:31:31,926 ERROR (GlobalDefaultExceptionHandler.java:93)- 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
### The error may involve com.hywa.pricepublish.dao.mapper.LogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: insert into log (id, userId, req_ip,        req_uri, req_host, req_port,        error_code, error_message, create_time,        real_error_message, parameter)     values (?, ?, ?,        ?, ?, ?,        ?, ?, ?,        ?, ?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
; ]; Data truncation: Data too long for column 'real_error_message' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'real_error_message' at row 1
2018-07-27 12:32:53,967 INFO (StartupInfoLogger.java:50)- Starting PricePublishingSystemApplication on 2016-20170502RH with PID 11248 (E:\svn\price-publishing-system\target\classes started by Administrator in E:\svn\price-publishing-system)
2018-07-27 12:32:53,968 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2018-07-27 12:32:53,970 INFO (SpringApplication.java:663)- The following profiles are active: dev
2018-07-27 12:33:00,207 INFO (StartupInfoLogger.java:59)- Started PricePublishingSystemApplication in 6.625 seconds (JVM running for 1151.017)
